<Project>
	<PropertyGroup>
		<_UnoBootstrapTaskBinary>$(MSBuildThisFileDirectory)../tools/Uno.Wasm.Bootstrap.v0.dll</_UnoBootstrapTaskBinary>

		<_WasmShellTasksPathIsDevMode>false</_WasmShellTasksPathIsDevMode>
		<_WasmShellTasksPathIsDevMode Condition="!Exists('$(_UnoBootstrapTaskBinary)')">true</_WasmShellTasksPathIsDevMode>
		<WasmShellTasksPath Condition="$(_WasmShellTasksPathIsDevMode)">$(MSBuildThisFileDirectory)../bin/$(Configuration)/netstandard2.0</WasmShellTasksPath>
		<WasmShellTasksPath Condition="!$(_WasmShellTasksPathIsDevMode)">../tools</WasmShellTasksPath>

		<WasmShellIndexHtmlPath Condition="!Exists('$(_UnoBootstrapTaskBinary)')">$(MSBuildThisFileDirectory)../Templates/index.html</WasmShellIndexHtmlPath>
		<WasmShellIndexHtmlPath Condition="Exists('$(_UnoBootstrapTaskBinary)') and '$(WasmShellIndexHtmlPath)'==''">$(MSBuildThisFileDirectory)../tools/templates/index.html</WasmShellIndexHtmlPath>

		<WasmShellContentExtensionsToExclude Condition="'$(WasmShellContentExtensionsToExclude)' == ''">.a;.bc;.o</WasmShellContentExtensionsToExclude>

		<WasmEnableThreads Condition=" '$(WasmShellEnableThreads)' == 'true' ">true</WasmEnableThreads>

		<WasmShellMode Condition="'$(WasmShellMode)'==''">browser</WasmShellMode>
	</PropertyGroup>

	<!-- AOT Profiling support -->
	<PropertyGroup Condition=" '$(WasmShellGenerateAOTProfile)' == 'true' ">
		<!-- Enable AOT profiling using a single property -->
		<WasmProfilers>$(WasmProfilers);aot;</WasmProfilers>

		<!-- Make the build faster by disabling compression -->
		<DisableBuildCompression>true</DisableBuildCompression>

		<!-- Disable AOT Compilation, log profiler can't trace calls in that mode -->
		<RunAOTCompilation>false</RunAOTCompilation>

		<!-- Ensure that emcc is running so the log profiler is included -->
		<WasmBuildNative>true</WasmBuildNative>

		<!-- Trimming must not be used for the profiler support assembly to be used -->
		<PublishTrimmed>false</PublishTrimmed>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(WasmShellMonoRuntimeExecutionMode)' == 'InterpreterAndAOT' AND '$(WasmShellGenerateAOTProfile)' != 'true' ">
		<RunAOTCompilation>true</RunAOTCompilation>
		<WasmBuildNative>true</WasmBuildNative>
	</PropertyGroup>

	<Target Name="_UnoInjectAOTSupport"
			BeforeTargets="ResolveRuntimePackAssets"
			Condition=" '$(WasmShellGenerateAOTProfile)' == 'true' ">
		<ItemGroup>
			<Reference Include="Uno.Wasm.AotProfiler"
					   HintPath="$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', '.., 'tools', 'support'))Uno.Wasm.AotProfiler.dll"
					   CopyToOutputDirectory="Always"
					   PostProcessAssembly="true" />
			<TrimmerRootAssembly Include="Uno.Wasm.AotProfiler" />
		</ItemGroup>
	</Target>

	<Target Name="_UnoInjectHotReloadSupport"
			BeforeTargets="ResolveRuntimePackAssets"
			Condition=" '$(Optimize)' != 'true' ">
		<ItemGroup>
			<Reference Include="Uno.Wasm.MetadataUpdater"
					   HintPath="$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', '..', 'tools', 'support'))Uno.Wasm.MetadataUpdater.dll"
					   CopyToOutputDirectory="Always"
					   PostProcessAssembly="true" />
			<TrimmerRootAssembly Include="Uno.Wasm.MetadataUpdater" />
		</ItemGroup>
	</Target>


	<Target Name="_WorkaroundEmscriptenPathLength"
			Condition=" '$(OS)' == 'Windows_NT' "
			BeforeTargets="_SetupEmscripten">

		<PropertyGroup>
			<_emsdkOriginalPackagePath>$([System.IO.Path]::GetFullPath('$(EmscriptenSdkToolsPath)..'))</_emsdkOriginalPackagePath>
			<_targetEMSDKPath>$(USERPROFILE)\.uno\emsdk\$([System.IO.Path]::GetFileName('$(_emsdkOriginalPackagePath)'))</_targetEMSDKPath>
		</PropertyGroup>

		<MakeDir Directories="$([System.IO.Path]::GetDirectoryName('$(_targetEMSDKPath)'))" />

		<Exec Command="mklink /J &quot;$(_targetEMSDKPath)&quot; &quot;$(EmscriptenSdkToolsPath)..\tools\&quot;"
			  ContinueOnError="true"
			  Condition="!exists($(_targetEMSDKPath))"/>

		<PropertyGroup>
			<EmscriptenSdkToolsPath>$(_targetEMSDKPath)\</EmscriptenSdkToolsPath>
			<EmscriptenUpstreamBinPath>$(EmscriptenSdkToolsPath)bin\</EmscriptenUpstreamBinPath>
			<EmscriptenUpstreamEmscriptenPath>$(EmscriptenSdkToolsPath)emscripten\</EmscriptenUpstreamEmscriptenPath>
		</PropertyGroup>

		<ItemGroup>
			<EmscriptenPrependPATH Remove="@(EmscriptenPrependPATH)" />
			<EmscriptenPrependPATH Include="$(EmscriptenUpstreamBinPath)" />
			<EmscriptenPrependPATH Include="$(EmscriptenUpstreamEmscriptenPath)" />
		</ItemGroup>

	</Target>

	<Target Name="_UnoAdjustCompatibility"
			BeforeTargets="ResolveStaticWebAssetsConfiguration">

		<ItemGroup>
			<!-- PInvoke compat -->
			<_WasmPInvokeModules Include="__Native" />
			<_WasmPInvokeModules Include="__Internal" />
			<_WasmPInvokeModules Include="@(WasmShellAdditionalPInvokeLibrary)" />

			<!-- emcc methods compatibility -->
			<EmccExportedRuntimeMethod Include="@(WasmShellEmccExportedRuntimeMethod)" />

			<!-- Native files compat -->
			<NativeFileReference Include="@(WasmShellNativeCompile)" />

			<_NativeAssetsFiltered Include="@(Assets)" Condition=" '%(Extension)'=='.a' OR '%(Extension)'=='.o' OR '%(Extension)'=='.bc' " />

			<TrimmerRootDescriptor Include="@(LinkerDescriptor)" />
		</ItemGroup>

		<PropertyGroup>
			<EmccFlags>$(EmccFlags);@(WasmShellExtraEmccFlags)</EmccFlags>

			<WasmEnableThreads Condition=" '$(WasmShellEnableThreads)' == 'true' ">true</WasmEnableThreads>

			<WasmBuildNative Condition=" 
				@(WasmShellAdditionalPInvokeLibrary->Count()) > 0 
				OR @(NativeFileReference->Count()) > 0 
				OR @(_NativeAssetsFiltered->Count()) > 0
				OR @(EmccExportedRuntimeMethod
				->Count()) > 0
				">true</WasmBuildNative>

			<!-- Compatibility mode that forces trimming when a linker descriptor is provided -->
			<PublishTrimmed Condition=" '$(PublishTrimmed)' == '' AND '@(LinkerDescriptor)' != '' AND '$(WasmShellILLinkerEnabled)' != 'false' ">true</PublishTrimmed>
		</PropertyGroup>

		<!--
			Override the cache path if it's not yet been set to use project
			local folder, in order to avoid the frozen cache of the runtime's
			emsdk.
		-->
		<PropertyGroup Condition=" '$(WasmCachePath)' == '$(EmscriptenCacheSdkCacheDir)' ">

			<WasmCachePath>$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)emsdk-cache'))</WasmCachePath>

			<!-- Adjust the cache on windows if the drive is not the same -->
			<WasmCachePath Condition="
				'$(OS)' == 'Windows_NT'
				AND '$(EmscriptenSdkToolsPath)' != ''
				AND '$(EmscriptenSdkToolsPath.Substring(1))' != '$(MSBuildProjectDirectory.Substring(1))'
				">$(TMP)\emsdk-cache</WasmCachePath>

		</PropertyGroup>

		<Warning
		  Condition="'$(registry:HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem@LongPathsEnabled)'!='1' and '$(UnoUIDisableLongPathWarning)'==''"
		  Text="Windows LongPath support is not enabled, you may experience build errors. You can avoid these by enabling LongPath with &quot;reg ADD HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1&quot;, or disable this warning by setting UnoUIDisableLongPathWarning to true."/>

		<ItemGroup>
			<_NativeAssetsFiltered Remove="@(_NativeAssetsFiltered)" />
		</ItemGroup>
	</Target>

	<UsingTask Condition="!$(_WasmShellTasksPathIsDevMode)" AssemblyFile="$(WasmShellTasksPath)/Uno.Wasm.Bootstrap.v0.dll" TaskName="Uno.Wasm.Bootstrap.ShellTask_v0" />
	<UsingTask Condition="!$(_WasmShellTasksPathIsDevMode)" AssemblyFile="$(WasmShellTasksPath)/Uno.Wasm.Bootstrap.v0.dll" TaskName="Uno.Wasm.Bootstrap.ValidateStaticAssets_v0" />
	<UsingTask Condition="!$(_WasmShellTasksPathIsDevMode)" AssemblyFile="$(WasmShellTasksPath)/Uno.Wasm.Bootstrap.v0.dll" TaskName="Uno.Wasm.Bootstrap.StaticWebAssetsResolverTask_v0" />
	<UsingTask Condition="!$(_WasmShellTasksPathIsDevMode)" AssemblyFile="$(WasmShellTasksPath)/Uno.Wasm.Bootstrap.v0.dll" TaskName="Uno.Wasm.Bootstrap.RemoveDirTask_v0" />

	<UsingTask Condition="$(_WasmShellTasksPathIsDevMode)" AssemblyFile="$(WasmShellTasksPath)/Uno.Wasm.Bootstrap.v0.dll" TaskName="Uno.Wasm.Bootstrap.ShellTask_v0" TaskFactory="TaskHostFactory" />
	<UsingTask Condition="$(_WasmShellTasksPathIsDevMode)" AssemblyFile="$(WasmShellTasksPath)/Uno.Wasm.Bootstrap.v0.dll" TaskName="Uno.Wasm.Bootstrap.ValidateStaticAssets_v0" TaskFactory="TaskHostFactory" />
	<UsingTask Condition="$(_WasmShellTasksPathIsDevMode)" AssemblyFile="$(WasmShellTasksPath)/Uno.Wasm.Bootstrap.v0.dll" TaskName="Uno.Wasm.Bootstrap.StaticWebAssetsResolverTask_v0" TaskFactory="TaskHostFactory" />
	<UsingTask Condition="$(_WasmShellTasksPathIsDevMode)" AssemblyFile	="$(WasmShellTasksPath)/Uno.Wasm.Bootstrap.v0.dll" TaskName="Uno.Wasm.Bootstrap.RemoveDirTask_v0" TaskFactory="TaskHostFactory" />

	<Target Name="ValidateAssets" BeforeTargets="_GenerateBuildWasmBootJson">
		<ValidateStaticAssets_v0
			CandidateAssets="@(WasmStaticWebAsset)"
			ExistingEndpoints="@(StaticWebAssetEndpoint)"
			ContentTypeMappings="@(StaticWebAssetContentTypeMapping)" />
	</Target>

	<Target Name="GenerateUnoWasmAssets"
		BeforeTargets="ResolveProjectStaticWebAssets;_UnoWasmNativeForBuild"
		DependsOnTargets="_UnoAdjustCompatibility">

		<ItemGroup>
			<!-- Filter ReferenceCopyLocalPaths as it may contain pdbs as well -->
			<_UnoWasmBootstrapAssembliesForReferenceCopyLocalPaths
			  Include="@(ReferenceCopyLocalPaths)"
			  Condition="'%(Extension)' == '.dll'" />
		</ItemGroup>

		<ItemGroup>
			<_UnoWasmCopyToOutputAssets
				Include="@(_AllChildProjectItemsWithTargetPath)"
				Condition=" '%(_AllChildProjectItemsWithTargetPath.CopyToOutputDirectory)' == 'PreserveNewest' OR '%(_AllChildProjectItemsWithTargetPath.CopyToOutputDirectory)' == 'Always' " />
		</ItemGroup>

		<ShellTask_v0
			AotProfile="$(WasmAotProfilePath)"
			Assembly="$(IntermediateOutputPath)$(TargetFileName)"
			AssemblyName="$(AssemblyName)"
			Assets="@(Content);@(_UnoWasmCopyToOutputAssets)"
			ContentExtensionsToExclude="$(WasmShellContentExtensionsToExclude)"
			CSPConfiguration="$(WasmShellCSPConfiguration)"
			CurrentProjectPath="$(MSBuildProjectDirectory)"
			EmbeddedResources="@(EmbeddedResource)"
			EmccExportedRuntimeMethod="@(EmccExportedRuntimeMethod)"
			EmccFlags="@(EmccFlags)"
			EmscriptenVersion="$(EmscriptenVersion)"
			EnableThreads="@(WasmEnableThreads)"
			GenerateAOTProfile="$(WasmShellGenerateAOTProfile)"
			IndexHtmlPath="$(WasmShellIndexHtmlPath)"
			IntermediateOutputPath="$(IntermediateOutputPath)"
			MonoEnvironment="@(WasmShellMonoEnvironment)"
			PublishTrimmed="$(PublishTrimmed)"
			RunILLink="$(RunILLink)"
			PWAManifestFile="$(WasmPWAManifestFile)"
			ReferencePath="@(_UnoWasmBootstrapAssembliesForReferenceCopyLocalPaths)"
			RunAOTCompilation="$(RunAOTCompilation)"
			Optimize="$(Optimize)"
			WasmBuildNative="$(WasmBuildNative)"
			WasmShellMode="$(WasmShellMode)"
			WebAppBasePath="$(WasmShellWebAppBasePath)"
			>
			<Output TaskParameter="StaticWebContent" ItemName="Content" />
			<Output TaskParameter="NativeFileReference" ItemName="NativeFileReference" />
			<Output TaskParameter="FilteredAotProfile" PropertyName="_FilteredAotProfile" />
		</ShellTask_v0>

		<PropertyGroup Condition=" '$(_FilteredAotProfile)' != '' ">
			<!-- Override the user's profile with the filtered one -->
			<WasmAotProfilePath>$(_FilteredAotProfile)</WasmAotProfilePath>
		</PropertyGroup>

	</Target>

</Project>
